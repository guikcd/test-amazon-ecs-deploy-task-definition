name: Deploy

on:
  push:
    branches: 
      - 'main'

jobs:
  deploy-main:
    runs-on: ubuntu-latest
    # These permissions are needed to interact with GitHub's OIDC Token endpoint.
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{secrets.AWS_ROLE_TO_ASSUME}}
          aws-region: ${{secrets.AWS_REGION}}

      - name: Download task definition
        #run: |
          #aws ecs describe-task-definition --task-definition fargate-task-run-task-definition --query taskDefinition > task-definition-without-tags.json
          #echo "###### task def ########"
          #cat task-definition-without-tags.json
          # get tags
          # FIXME: move tags from the top to the content
          #echo "###### task tags ########"
          #aws ecs describe-task-definition --task-definition fargate-task-definition:46 --include TAGS --query tags > task-definition-tags.json
          #cat task-definition-tags.json
          # merge tags content into task def
          #jq '.tags += $tags' --slurpfile tags task-definition-tags.json task-definition-without-tags.json > task-definition.json
          #aws ecs describe-task-definition --task-definition fargate-task-run-task-definition --include TAGS | jq '.taskDefinition += { "tags": .tags }' | jq .taskDefinition > task-definition.json
          #cat task-definition.json
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition-family: fargate-task-definition
          container-name: sample-fargate-app
          image: public.ecr.aws/docker/library/httpd:2.4

      - name: Deploy service to Amazon ECS ignoredAttributes
        uses: guikcd/amazon-ecs-deploy-task-definition@ignoredAttributes
        with:
          #task-definition: task-definition.json
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{secrets.ECS_SERVICE}}
          cluster: ${{secrets.ECS_CLUSTER}}
          wait-for-service-stability: false

      #- name: Deploy task to Amazon ECS
      #  uses: guikcd/amazon-ecs-deploy-task-definition@tags_propagate_taskdef
      #  with:
      #    task-definition: task-definition.json
      #    cluster: ${{secrets.ECS_CLUSTER}}
      #    run-task: true
      #    run-task-security-groups: sg-0dd8b7d47efa871c1
      #    run-task-subnets: subnet-48cffe2e
      #    run-task-assign-public-IP: ENABLED
      #    run-task-tags: '[{"key": "project", "value": "myruntaskproject"}]'
      #    enable-ecs-managed-tags: true
      #    propagate-tags: TASK_DEFINITION

      #- name: Download task definition
      #  run: |
      #    aws ecs describe-task-definition --task-definition fargate-task-definition --query taskDefinition > task-definition.json

      #- name: Deploy service to Amazon ECS
      #  uses: guikcd/amazon-ecs-deploy-task-definition@tags
      #  with:
      #    task-definition: task-definition.json
      #    service: ${{secrets.ECS_SERVICE}}
      #    cluster: ${{secrets.ECS_CLUSTER}}
      #    wait-for-service-stability: true
      #    enable-ecs-managed-tags: true
      #    propagate-tags: SERVICE

      #- name: Check tags
      #  run: |
      #    #aws ecs describe-tasks --cluster test-ecs-deploy-task-definition-cluster --tasks $task --query 'tasks[?group==`service:test-ecs-deploy-task-definition-service`].taskArn' --output text
